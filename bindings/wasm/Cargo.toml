[package]
name = "identity_wasm"
version = "0.7.0-alpha.6"
authors = ["IOTA Stiftung"]
edition = "2021"
homepage = "https://www.iota.org"
keywords = ["iota", "tangle", "identity", "wasm"]
license = "Apache-2.0"
publish = false
readme = "README.md"
repository = "https://github.com/iotaledger/identity.rs"
resolver = "2"
description = "Web Assembly bindings for the identity-rs crate."

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
async-trait = { version = "0.1.68", default-features = false }
console_error_panic_hook = { version = "0.1" }
futures = { version = "0.3" }
js-sys = { version = "0.3.61" }
proc_typescript = { version = "0.1.0", path = "./proc_typescript" }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0", default-features = false }
serde_repr = { version = "0.1", default-features = false }
# Want to use the nice API of tokio::sync::RwLock for now even though we can't use threads.
tokio = { version = "1.29", default-features = false, features = ["sync"] }
wasm-bindgen = { version = "0.2.85", features = ["serde-serialize"] }
wasm-bindgen-futures = { version = "0.4", default-features = false }

[dependencies.identity_iota]
version = "0.7.0-alpha.7"
path = "../../identity_iota"
default-features = false
features = ["client", "revocation-bitmap", "resolver", "eddsa", "domain-linkage"]

[dev-dependencies]
rand = "0.8.5"

[target.'cfg(all(target_arch = "wasm32", not(target_os = "wasi")))'.dependencies]
getrandom = { version = "0.2", default-features = false, features = ["js"] }
instant = { version = "0.1", default-features = false, features = ["wasm-bindgen"] }

[profile.release]
opt-level = 's'
lto = true
