[package]
name = "identity_storage"
version = "0.7.0-alpha.7"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
keywords = ["iota", "storage", "identity", "kms", "stronghold"]
license.workspace = true
readme = "./README.md"
repository.workspace = true
rust-version.workspace = true
description = "Abstractions over storage for cryptographic keys used in DID Documents"

[dependencies]
async-trait = { version = "0.1.68", default-features = false }
futures = { version = "0.3.27", default-features = false, features = ["async-await"] }
identity_core = { version = "=0.7.0-alpha.7", path = "../identity_core", default-features = false }
identity_credential = { version = "=0.7.0-alpha.7", path = "../identity_credential", default-features = false, features = ["credential", "presentation"] }
identity_did = { version = "=0.7.0-alpha.7", path = "../identity_did", default-features = false }
identity_document = { version = "=0.7.0-alpha.7", path = "../identity_document", default-features = false }
identity_iota_core = { version = "=0.7.0-alpha.7", path = "../identity_iota_core", default-features = false, optional = true }
identity_verification = { version = "=0.7.0-alpha.7", path = "../identity_verification", default_features = false }
iota-crypto = { version = "0.23", default-features = false, features = ["blake2b", "ed25519", "random"], optional = true }
iota-sdk = { git = "https://github.com/marcianos/iota-sdk", rev = "7b061063b89e2278af129a98bedc44052f1a3bd6", default-features = true, features = ["tls", "client", "stronghold"], optional = true }
iota_stronghold = { version = "2.0", optional = true, default-features = false }
rand = { version = "0.8.5", default-features = false, features = ["std", "std_rng"], optional = true }
seahash = { version = "4.1.0", default_features = false }
serde.workspace = true
serde_json.workspace = true
thiserror.workspace = true
tokio = { version = "1.29.0", default-features = false, features = ["macros", "sync"], optional = true }
zeroize = { version = "1.6.0", default_features = false, optional = true }

[dev-dependencies]
identity_credential = { version = "=0.7.0-alpha.7", path = "../identity_credential", features = ["revocation-bitmap"] }
once_cell = { version = "1.17.2", default-features = false }
tokio = { version = "1.29.0", default-features = false, features = ["macros", "sync", "rt"] }

[features]
default = ["iota-document", "memstore"]
# Exposes in-memory implementations of the storage traits intended exclusively for testing.
memstore = ["dep:tokio", "dep:rand", "dep:iota-crypto", "identity_verification/eddsa"]
# Enables `Send` + `Sync` bounds for the storage traits.
send-sync-storage = []
# Implements the JwkStorageDocumentExt trait for IotaDocument
# Exposes the stronghold implementations for the storage traits.
stronghold = ["dep:tokio", "dep:iota-sdk", "dep:iota_stronghold", "dep:zeroize", "dep:rand", "dep:iota-crypto"]
iota-document = ["dep:identity_iota_core"]
